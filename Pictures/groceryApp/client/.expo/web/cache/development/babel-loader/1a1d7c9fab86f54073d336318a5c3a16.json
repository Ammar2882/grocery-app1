{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\groceryAppExpo\\\\screens\\\\admin\\\\ForgotPassword.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar ForgotPassword = function ForgotPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      reset = _useState2[0],\n      setReset = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var forgotFunction = function forgotFunction(props) {\n    return _regeneratorRuntime.async(function forgotFunction$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetch(\"http://192.168.18.3:3001/forgetPassword\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function _callee(data) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setMessage(data.status);\n                      setReset(true);\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return reset ? React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, message)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Admin Login\");\n    },\n    style: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"OK\"))) : React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Enter Your Email...\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email...\",\n    keyboardType: \"email-address\",\n    placeholderTextColor: \"#003f5c\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return forgotFunction();\n    },\n    style: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Reset Password\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003f5c\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 35,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 45,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  signup: {\n    color: \"white\",\n    fontSize: 15\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginHorizontal: 10\n  }\n});\nexport default ForgotPassword;","map":{"version":3,"sources":["D:/groceryAppExpo/screens/admin/ForgotPassword.js"],"names":["React","useState","ForgotPassword","props","reset","setReset","email","setEmail","message","setMessage","forgotFunction","fetch","method","headers","body","JSON","stringify","then","res","json","data","status","styles","container","inputView","color","navigation","navigate","loginBtn","loginText","logo","inputText","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","marginBottom","width","borderRadius","height","padding","forgot","signup","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [reset, setReset] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const forgotFunction = async (props) => {\r\n    fetch(\"http://192.168.18.3:3001/forgetPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(async (data) => {\r\n        setMessage(data.status);\r\n        setReset(true);\r\n      });\r\n  };\r\n\r\n  return reset ? (\r\n    <View style={styles.container}>\r\n      <View style={styles.inputView}>\r\n        <Text style={{ color: \"#fff\" }}>{message}</Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        onPress={() => props.navigation.navigate(\"Admin Login\")}\r\n        style={styles.loginBtn}\r\n      >\r\n        <Text style={styles.loginText}>OK</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  ) : (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logo}>Enter Your Email...</Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.inputText}\r\n          placeholder=\"Email...\"\r\n          keyboardType=\"email-address\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n      </View>\r\n      <TouchableOpacity\r\n        onPress={() => forgotFunction()}\r\n        style={styles.loginBtn}\r\n      >\r\n        <Text style={styles.loginText}>Reset Password</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#003f5c\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 35,\r\n    color: \"#fb5b5a\",\r\n    marginBottom: 40,\r\n  },\r\n  inputView: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#465881\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  inputText: {\r\n    height: 45,\r\n    color: \"white\",\r\n  },\r\n  forgot: {\r\n    color: \"white\",\r\n    fontSize: 11,\r\n  },\r\n  signup: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 10,\r\n  },\r\n});\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}