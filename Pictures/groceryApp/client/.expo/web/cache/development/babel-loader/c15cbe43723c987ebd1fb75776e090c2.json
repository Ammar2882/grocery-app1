{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\groceryAppExpo\\\\screens\\\\admin\\\\Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar Login = function Login(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var AdminLoginCred = function AdminLoginCred(props) {\n    return _regeneratorRuntime.async(function AdminLoginCred$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"im in admin login route\");\n            fetch(\"http://192.168.18.3:3001/adminSignin\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function _callee(data) {\n              var items;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      console.log(data);\n                      items = {\n                        adminId: data[0],\n                        token: data[1]\n                      };\n\n                      if (!(data[1] !== undefined)) {\n                        _context.next = 12;\n                        break;\n                      }\n\n                      console.log(\"im in data check admin login\");\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"item\", JSON.stringify(items)));\n\n                    case 7:\n                      props.navigation.navigate(\"Home\");\n                      ToastAndroid.show(\"Logged in successfully !\", ToastAndroid.SHORT);\n                      console.log(data);\n                      _context.next = 13;\n                      break;\n\n                    case 12:\n                      Alert.alert(\"Login Failed\", \"Enter valid credentials\");\n\n                    case 13:\n                      _context.next = 18;\n                      break;\n\n                    case 15:\n                      _context.prev = 15;\n                      _context.t0 = _context[\"catch\"](0);\n                      console.log(_context.t0);\n\n                    case 18:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[0, 15]], Promise);\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"AUTO GROCERY\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email...\",\n    keyboardType: \"email-address\",\n    placeholderTextColor: \"#003f5c\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Passowrd...\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate('Forgot Password');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return AdminLoginCred(props);\n    },\n    style: styles.loginBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Signup\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.signup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#003f5c\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 45,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  signup: {\n    color: \"white\",\n    fontSize: 15\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/groceryAppExpo/screens/admin/Login.js"],"names":["React","useState","AsyncStorage","Login","props","email","setEmail","password","setPassword","AdminLoginCred","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","items","adminId","token","undefined","setItem","navigation","navigate","ToastAndroid","show","SHORT","Alert","alert","styles","container","logo","inputView","inputText","text","forgot","loginBtn","loginText","signup","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ToastAndroid,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const AdminLoginCred = async (props) => {\r\n    console.log(\"im in admin login route\");\r\n    fetch(\"http://192.168.18.3:3001/adminSignin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(async (data) => {\r\n        try {\r\n          console.log(data);\r\n          var items = {\r\n            adminId: data[0],\r\n            token: data[1],\r\n          };\r\n          if (data[1] !== undefined) {\r\n            console.log(\"im in data check admin login\");\r\n            await AsyncStorage.setItem(\"item\", JSON.stringify(items));\r\n            props.navigation.navigate(\"Home\");\r\n            ToastAndroid.show(\"Logged in successfully !\", ToastAndroid.SHORT);\r\n            console.log(data);\r\n          } else {\r\n            Alert.alert(\"Login Failed\", \"Enter valid credentials\");\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.logo}>AUTO GROCERY</Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.inputText}\r\n          placeholder=\"Email...\"\r\n          keyboardType=\"email-address\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.inputText}\r\n          placeholder=\"Passowrd...\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          secureTextEntry={true}\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n      </View>\r\n      <TouchableOpacity onPress={() => props.navigation.navigate('Forgot Password')}>\r\n        <Text style={styles.forgot}>Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => AdminLoginCred(props)}\r\n        style={styles.loginBtn}\r\n      >\r\n        <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => props.navigation.navigate(\"Signup\")}>\r\n        <Text style={styles.signup}>Signup</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#003f5c\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 50,\r\n    color: \"#fb5b5a\",\r\n    marginBottom: 40,\r\n  },\r\n  inputView: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#465881\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  inputText: {\r\n    height: 45,\r\n    color: \"white\",\r\n  },\r\n  forgot: {\r\n    color: \"white\",\r\n    fontSize: 11,\r\n  },\r\n  signup: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n  },\r\n  loginBtn: {\r\n    width: \"80%\",\r\n    backgroundColor: \"#fb5b5a\",\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}